using System;

class NumericDataTypes
{
	static void Main()
	{
		//Переменная — это именованная область памяти.
		//
		//Тип переменной — это формат области памяти, определяющий множество возможных значений
		// переменной и множество допустимых операций над ней.

		int integerNumber;
		// так объявляется переменная: тип (int), затем имя (integerNumber)

		// так осуществляется присваивание
		integerNumber = 10;

		// double - основной тип чисел с плавающей точкой.
		// Можно совмещать объявление и присваивание.
		double realNumber = 12.34;

		// float - тип меньшей точности.
		// Суффикс f говорит, что 1.234 - константа типа float, а не double.
		// Используются в библиотеках работы с графикой в Windows.
		float floatNumber = 1.234f;

		//long (большие целые числа). Часто используется для подсчета миллисекунд. 
		// L - суффикс констант такого типа, чтобы не перепутать их с int.
		long longIntegerNumber = 3000000000000L;

		// Есть и другие типы данных: short, decimal, и т.д.
		// В основном, для чисел вы будете пользоваться int и double, иногда - long и float

		// Конверсия типов (cast) - это преобразование одного типа переменной в другой 

		int integerNumber = 45;
		double doubleNumber = 34.56;

		doubleNumber = integerNumber;
		// Это неявная конверсия типов: присвоение переменной одного типа 
		// значения переменной другого типа без дополнительных усилий. 
		// Она возможна, когда не происходит потери информации

		integerNumber = (int)doubleNumber;
		// Это явная конверсия типов. В случае, когда конверсия ведет к потере информации
		// (в данном случае - дробной части), необходимо явно обозначать свои намерения
		// по конверсии.

		integerNumber = (int)Math.Round(34.67);
		// Округление лучше всего делать не конверсией, а функцией Round. 
		// Кстати, Math - "математическая библиотека" C# - имеет множество других
		// полезных методов. 

		long longInteger = 4000000000;
		integerNumber = (int)longInteger;
		// При такой конверсии происходит ошибка переполнения, которая, однако, остается
		// незамеченной для компилятора и среды разработки

		// Таким образом можно отловить эти ошибки явно
		checked
		{
			integerNumber = (int)longInteger;
		}
	}
}